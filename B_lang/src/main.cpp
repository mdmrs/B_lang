#include <iostream>
#include "lexer.h"
#include "parser.tab.hpp" // Include the header generated by Bison

extern FILE *yyin;
extern char* yytext;
extern int yyleng;
extern YYSTYPE yylval;

int main() {
    yyin = fopen("input.b", "r");
    if (!yyin) {
        std::cerr << "Error opening input file" << std::endl;
        return 1;
    }

    int token;
    do {
        token = yylex();
        switch (token) {
            case T_INCLUDE: std::cout << "T_INCLUDE: সামিল" << std::endl; break;
            case T_MAIN: std::cout << "T_MAIN: প্রধান" << std::endl; break;
            case T_PPRINTF: std::cout << "T_PPRINTF: ছাপাও" << std::endl; break;
            case T_INT: std::cout << "T_INT: পুন" << std::endl; break;
            case T_FLOAT: std::cout << "T_FLOAT: দশমি" << std::endl; break;
            case T_IF: std::cout << "T_IF: যদি" << std::endl; break;
            case T_ELSEIF: std::cout << "T_ELSEIF: বাযদি" << std::endl; break;
            case T_ELSE: std::cout << "T_ELSE: নয়তো" << std::endl; break;
            case T_DO: std::cout << "T_DO: কর" << std::endl; break;
            case T_WHILE: std::cout << "T_WHILE: যখন" << std::endl; break;
            case T_FOR: std::cout << "T_FOR: বারবার" << std::endl; break;
            case T_PLUS: std::cout << "T_PLUS: +" << std::endl; break;
            case T_STAR: std::cout << "T_STAR: *" << std::endl; break;
            case T_MINUS: std::cout << "T_MINUS: -" << std::endl; break;
            case T_SLASH: std::cout << "T_SLASH: /" << std::endl; break;
            case T_PERCENT: std::cout << "T_PERCENT: %" << std::endl; break;
            case T_AND: std::cout << "T_AND: &&" << std::endl; break;
            case T_OR: std::cout << "T_OR: ||" << std::endl; break;
            case T_EQ: std::cout << "T_EQ: ==" << std::endl; break;
            case T_LT: std::cout << "T_LT: <" << std::endl; break;
            case T_GT: std::cout << "T_GT: >" << std::endl; break;
            case T_NEQ: std::cout << "T_NEQ: !=" << std::endl; break;
            case T_ASSIGN: std::cout << "T_ASSIGN: =" << std::endl; break;
            case T_SEMICOLON: std::cout << "T_SEMICOLON: ;" << std::endl; break;
            case T_COMMA: std::cout << "T_COMMA: ," << std::endl; break;
            case T_INT_FORMAT: std::cout << "T_INT_FORMAT: %প" << std::endl; break;
            case T_FLOAT_FORMAT: std::cout << "T_FLOAT_FORMAT: %দ" << std::endl; break;
            case T_INTEGER_LITERAL: std::cout << "T_INTEGER_LITERAL: " << yylval.ival << std::endl; break;
            case T_FLOAT_LITERAL: std::cout << "T_FLOAT_LITERAL: " << yylval.fval << std::endl; break;
            case T_IDENTIFIER: std::cout << "T_IDENTIFIER: " << *yylval.sval << std::endl; delete yylval.sval; break;
            case T_STRING_LITERAL: std::cout << "T_STRING_LITERAL: \"" << *yylval.sval << "\"" << std::endl; delete yylval.sval; break;
            case 0: std::cout << "EOF" << std::endl; break;
            default: std::cout << "Unknown token: " << token << " Text: " << yytext << std::endl; break;
        }
    } while (token != 0);

    fclose(yyin);
    return 0;
}